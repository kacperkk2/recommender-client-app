{"version":3,"sources":["components/Algorithm.js","components/AlgorithmList.js","components/DataSet.js","components/DataSetList.js","components/TopK.js","components/UserId.js","components/RecommendationList.js","components/HistoryList.js","components/AlertLabel.js","App.js","serviceWorker.js","index.js"],"names":["Algorithm","elementStyle","backgroundColor","props","algorithm","short","picked","padding","margin","cursor","pickedAlgorithm","title","this","name","style","onClick","bordered","link","React","Component","AlgorithmList","state","algorithms","axios","get","then","res","setState","data","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","Item","key","DataSet","dataSet","pickedDataSet","users_num","items_num","density","description","DataSetList","dataSets","Option","Select","TopK","pickedTopK","value","defaultValue","topK","width","onChange","UserId","userIdInput","handleChange","userIdSubmit","e","preventDefault","getUsersIdSample","Object","getOwnPropertyNames","length","JSON","parse","users_id_sample","join","isAlgorithmAndDataSetPicked","textAlign","paddingBottom","size","min","paddingTop","fontSize","justifyContent","display","height","type","disabled","columns","dataIndex","render","text","record","href","crag","target","rel","RecommendationList","elements","rowKey","HistoryList","AlertLabel","message","lineHeight","labelStyle","fontWeight","background","App","pickedUserId","recommendations","userHistory","errorMessage","catch","error","response","console","log","err","className","span","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1c260d40.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from 'antd';\n\nclass Algorithm extends React.Component {\n    elementStyle = () => {\n        return {\n            backgroundColor: (this.props.algorithm.short === this.props.picked.short) \n                ? '#add8e6' : '#f4f4f4',\n            padding: '10px',\n            margin: '10px',\n            cursor: 'pointer'\n        }\n    }\n\n    pickedAlgorithm = () => {\n        this.props.pickedAlgorithm(this.props.algorithm);\n    }\n\n    render() {\n        return (\n            <Card title={this.props.algorithm.name} style={this.elementStyle()} onClick={this.pickedAlgorithm} bordered={false} >\n                <p>Short name: {this.props.algorithm.short}</p>\n                <p>Description: {this.props.algorithm.link}</p>\n            </Card>\n        );\n    }\n}\n\nAlgorithm.propTypes = {\n    algorithm: PropTypes.object.isRequired\n}\n\nexport default Algorithm;","import React from 'react';\nimport Algorithm from './Algorithm';\nimport axios from 'axios';\nimport { List } from 'antd';\n\nclass AlgorithmList extends React.Component {\n    state = {\n        algorithms: []\n    }\n\n    componentDidMount() {\n        axios.get('https://recommender-server.herokuapp.com/algorithms/')\n        .then(res => {\n            this.setState({\n                algorithms: res.data\n            });\n        })\n    }\n\n    render() {\n        return (\n            <List\n                grid={{\n                gutter: 16,\n                xs: 1,\n                sm: 2,\n                md: 2,\n                lg: 3,\n                xl: 4,\n                xxl: 4,\n                }}\n                dataSource={this.state.algorithms}\n                renderItem={algorithm => (\n                <List.Item>\n                    <Algorithm key={algorithm.short} picked={this.props.picked} algorithm={algorithm} pickedAlgorithm={this.props.pickedAlgorithm}/>\n                </List.Item>\n                )}\n            />\n        );\n    }\n}\n\nexport default AlgorithmList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from 'antd';\n\nclass DataSet extends React.Component {\n    elementStyle = () => {\n        return {\n            backgroundColor: (this.props.dataSet.name === this.props.picked.name) \n                ? '#add8e6' : '#f4f4f4',\n            padding: '10px',\n            margin: '10px',\n            cursor: 'pointer'\n        }\n    }\n\n    pickedDataSet = () => {\n        this.props.pickedDataSet(this.props.dataSet);\n    }\n\n    render() {\n        return (\n            <Card title={this.props.dataSet.name} style={this.elementStyle()} onClick={this.pickedDataSet} bordered={false} >\n                <p>Number of users: {this.props.dataSet.users_num}</p>\n                <p>Number of items: {this.props.dataSet.items_num}</p>\n                <p>Density: {this.props.dataSet.density}%</p>\n                <p>Description: {this.props.dataSet.description}</p>\n            </Card>\n        );\n    }\n}\n\nDataSet.propTypes = {\n    dataSet: PropTypes.object.isRequired\n}\n\nexport default DataSet;","import React from 'react';\nimport DataSet from './DataSet';\nimport axios from 'axios';\nimport { List } from 'antd';\n\nclass DataSetList extends React.Component {\n    state = {\n        dataSets: []\n    }\n\n    componentDidMount() {\n        axios.get('https://recommender-server.herokuapp.com/data_sets/')\n        .then(res => {\n            this.setState({\n                dataSets: res.data\n            });\n        })\n    }\n\n    render() {\n        return (\n            <List\n                grid={{\n                gutter: 16,\n                xs: 1,\n                sm: 2,\n                md: 2,\n                lg: 3,\n                xl: 4,\n                xxl: 4,\n                }}\n                dataSource={this.state.dataSets}\n                renderItem={dataSet => (\n                <List.Item>\n                    <DataSet key={dataSet.name} picked={this.props.picked} dataSet={dataSet} pickedDataSet={this.props.pickedDataSet}/>\n                </List.Item>\n                )}\n            />\n        );\n    }\n}\n\nexport default DataSetList;","import React from 'react';\nimport { Select } from 'antd';\nconst { Option } = Select;\n\nclass TopK extends React.Component {\n\n    pickedTopK = (value) => {\n        this.props.pickedTopK(value);\n    }\n\n    render() {\n        return (\n            <Select defaultValue={this.props.topK} style={{ width: 120 }} onChange={this.pickedTopK}>\n                <Option value=\"10\">Top10</Option>\n                <Option value=\"20\">Top20</Option>\n                <Option value=\"50\">Top50</Option>\n            </Select>\n        );\n    }\n}\n\nexport default TopK;","import React from 'react';\nimport TopK from './TopK';\nimport { InputNumber, Button } from 'antd';\n\n\nclass UserId extends React.Component {\n\n    state = {\n        userIdInput: '1'\n    }\n\n    handleChange = (value) => {\n        this.setState( {userIdInput: value} )\n    }\n\n    userIdSubmit = (e) => {\n        e.preventDefault();\n        this.props.userIdSubmit(this.state.userIdInput);\n    }\n\n    getUsersIdSample = () => {\n        if (Object.getOwnPropertyNames(this.props.pickedDataSet).length === 0) {\n            return(\n                <p> Pick a dataset to see users ids examples </p>\n            )\n        }\n        else {\n            return(\n                <p> Example ids: {JSON.parse(this.props.pickedDataSet.users_id_sample).join(\", \")} </p>\n            )\n        }\n    }\n\n    isAlgorithmAndDataSetPicked = () => {\n        return (Object.getOwnPropertyNames(this.props.pickedDataSet).length !== 0 && \n        Object.getOwnPropertyNames(this.props.pickedAlgorithm).length !== 0) ? false : true;\n    }\n\n    render() {\n        return (\n            <div style={{padding: '5px', textAlign: 'center'}}>\n                {this.getUsersIdSample()}\n\n                <div style={{paddingBottom: '5px'}}>\n                    <InputNumber size='large' min={1} defaultValue={1} onChange={this.handleChange} />\n                </div>\n                <div style={{paddingTop: '5px'}}>\n                    <TopK topK={this.props.topK} pickedTopK={this.props.pickedTopK}/>\n                </div>\n\n                <div style={{padding: '30px'}}>\n                    <Button style={{ fontSize: '150%', justifyContent: 'center', display: 'flex', margin: '0 auto', height: '70px', width: '320px'}} type=\"default\" onClick={this.userIdSubmit} disabled={this.isAlgorithmAndDataSetPicked()}>Click to get recommendations!</Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UserId;","import React from 'react';\nimport { Table } from 'antd';\n\nconst columns = [\n    {\n      title: 'Rank',\n      dataIndex: 'rank',\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      render: (text, record) => <a href={'https://www.8a.nu/scorecard/Search.aspx?SearchType=ASCENTS&CragName=' + record.crag + '&AscentName=' + record.name} target=\"_blank\" rel=\"noopener noreferrer\">{text}</a>\n    },\n    {\n      title: 'Crag',\n      dataIndex: 'crag',\n      render: (text, record) => <a href={'https://www.8a.nu/scorecard/Search.aspx?Mode=SIMPLE&CragName=' + record.crag} target=\"_blank\" rel=\"noopener noreferrer\">{text}</a>\n    },\n    {\n      title: 'Sector',\n      dataIndex: 'sector',\n    },\n    {\n      title: 'Grade',\n      dataIndex: 'grade',\n    },\n    {\n      title: 'Country code',\n      dataIndex: 'country',\n    },\n];\n\nclass RecommendationList extends React.Component {\n\n    render() {\n        return (\n            <Table columns={columns} dataSource={this.props.elements} size=\"middle\" rowKey=\"name\"/>\n        );\n    }\n}\n\nexport default RecommendationList;","import React from 'react';\nimport { Table } from 'antd';\n\nconst columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      render: (text, record) => <a href={'https://www.8a.nu/scorecard/Search.aspx?SearchType=ASCENTS&CragName=' + record.crag + '&AscentName=' + record.name} target=\"_blank\" rel=\"noopener noreferrer\">{text}</a>\n    },\n    {\n      title: 'Crag',\n      dataIndex: 'crag',\n      render: (text, record) => <a href={'https://www.8a.nu/scorecard/Search.aspx?Mode=SIMPLE&CragName=' + record.crag} target=\"_blank\" rel=\"noopener noreferrer\">{text}</a>\n    },\n    {\n      title: 'Sector',\n      dataIndex: 'sector',\n    },\n    {\n      title: 'Grade',\n      dataIndex: 'grade',\n    },\n    {\n      title: 'Country code',\n      dataIndex: 'country',\n    },\n    {\n      title: 'Date',\n      dataIndex: 'date',\n    },\n];\n\nclass HistoryList extends React.Component {\n\n    render() {\n        return (\n            <Table columns={columns} dataSource={this.props.elements} size=\"middle\" rowKey=\"name\"/>\n        );\n    }\n}\n\nexport default HistoryList;","import React from 'react';\nimport { Alert } from 'antd';\n\n\nclass AlertLabel extends React.Component {\n\n    render() {\n        return (\n            <div style={{padding: '20px'}}>\n                <Alert message={this.props.message} type=\"error\" style={{textAlign: 'center', height: '50px', lineHeight: '30px', fontSize: '120%'}}/>\n            </div>\n        );\n    }\n}\n\nexport default AlertLabel;","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Row, Col } from 'antd';\n\nimport AlgorithmList from './components/AlgorithmList';\nimport DataSetList from './components/DataSetList';\nimport UserId from './components/UserId';\nimport RecommendationList from './components/RecommendationList';\nimport HistoryList from './components/HistoryList';\nimport AlertLabel from './components/AlertLabel';\nimport axios from 'axios';\n\nconst labelStyle = {\n  padding: '10px', \n  fontSize: '150%', \n  fontWeight: 'bold', \n  textAlign: 'center', \n  background: '#bee9e6'\n};\n\nclass App extends React.Component {\n  state = {\n    pickedAlgorithm: {},\n    pickedDataSet: {},\n    pickedUserId: '',\n    topK: '10',\n    recommendations: [],\n    userHistory: [],\n    errorMessage: ''\n  }\n\n  pickedAlgorithm = (algorithm) => {\n    // console.log(algorithm)\n    this.setState({\n      pickedAlgorithm: algorithm,\n      errorMessage: ''\n    })\n  }\n\n  pickedDataSet = (dataSet) => {\n    // console.log(dataSet)\n    this.setState({\n      pickedDataSet: dataSet,\n      errorMessage: ''\n    })\n  }\n\n  pickedTopK = (value) => {\n    // console.log(value)\n    this.setState({\n      topK: value\n    })\n  }\n\n  userIdSubmit = (userIdInput) => {\n    if(Object.getOwnPropertyNames(this.state.pickedAlgorithm).length !== 0 && \n    Object.getOwnPropertyNames(this.state.pickedDataSet).length !== 0) {\n\n      this.setState({\n        recommendations: [],\n        userHistory: [],\n        errorMessage: ''\n      })\n\n      // axios.get(`https://recommender-server.herokuapp.com/results?alg=${this.state.pickedAlgorithm.short}&data=${this.state.pickedDataSet.name}&user_id=${userIdInput}`)\n      axios.get(`https://recommender-server.herokuapp.com/results?alg=${this.state.pickedAlgorithm.short}&data=${this.state.pickedDataSet.name}&user_id=${userIdInput}&topK=${this.state.topK}`)\n        .then(res => {\n            // console.log(res)\n            this.setState({\n              recommendations: res.data\n            });\n        })\n        .catch(error => {\n          if (error.response.data.message === \"NO_MODEL\") {\n            this.setState({\n              errorMessage: \"There is no model for selected elements! Please choose other\"\n            });\n          }\n          else if (error.response.data.message === \"INVALID_ID\") {\n            this.setState({\n              errorMessage: \"User id not exists in selected data set! Consider using example ids\"\n            });\n          }\n          else {\n            console.log(error);\n          }\n          return;\n        });\n\n      axios.get(`https://recommender-server.herokuapp.com/histories?data=${this.state.pickedDataSet.name}&user_id=${userIdInput}`)\n        .then(res => {\n            // console.log(res)\n            this.setState({\n              userHistory: res.data\n            });\n        })\n        .catch(err => console.log(err));\n    }\n  }\n\n  render() {\n      return (\n          <div className=\"App\" style={{padding: '20px', background: '#ECECEC'}}>\n\n              <div style={labelStyle}> Algorithms </div>\n              <AlgorithmList picked={this.state.pickedAlgorithm} pickedAlgorithm={this.pickedAlgorithm}/>\n              \n              <div style={labelStyle}> Data sets </div>\n              <DataSetList picked={this.state.pickedDataSet} pickedDataSet={this.pickedDataSet}/>\n          \n              <div style={labelStyle}> User id </div>\n              <UserId pickedDataSet={this.state.pickedDataSet} pickedAlgorithm={this.state.pickedAlgorithm} \n                      userIdSubmit={this.userIdSubmit} topK={this.state.topK} pickedTopK={this.pickedTopK}/>\n\n              {this.state.errorMessage ? <AlertLabel message={this.state.errorMessage}/> : null}\n\n              <div style={{paddingTop: '20px', paddingBottom: '20px'}}>\n                <Row gutter={[24, 16]}>\n                  <Col xs={{ span: 24 }} lg={{ span: 12 }}>\n                    <div style={labelStyle}> Recommendations list </div>\n                    <RecommendationList elements={this.state.recommendations}/>\n                  </Col>\n                  <Col xs={{ span: 24 }} lg={{ span: 12 }}>\n                    <div style={labelStyle}> User history </div>\n                    <HistoryList elements={this.state.userHistory}/>\n                  </Col>\n                </Row>\n              </div>\n          </div>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}