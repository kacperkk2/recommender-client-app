{"ast":null,"code":"var _jsxFileName = \"/home/kklimczu/STUDIA/inz_app/Recommender/frontend/recommender/src/App.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Row, Col } from 'antd';\nimport AlgorithmList from './components/AlgorithmList';\nimport DataSetList from './components/DataSetList';\nimport UserId from './components/UserId';\nimport PathsList from './components/PathsList';\nimport AlertLabel from './components/AlertLabel';\nimport axios from 'axios';\nconst labelStyle = {\n  padding: '10px',\n  fontSize: '150%',\n  fontWeight: 'bold',\n  textAlign: 'center',\n  background: '#bee9e6'\n};\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pickedAlgorithm: {},\n      pickedDataSet: {},\n      pickedUserId: '',\n      recommendations: [],\n      userHistory: [],\n      errorMessahe: ''\n    };\n\n    this.pickedAlgorithm = algorithm => {\n      // console.log(algorithm)\n      this.setState({\n        pickedAlgorithm: algorithm,\n        errorMessage: ''\n      });\n    };\n\n    this.pickedDataSet = dataSet => {\n      // console.log(dataSet)\n      this.setState({\n        pickedDataSet: dataSet,\n        errorMessage: ''\n      });\n    };\n\n    this.userIdSubmit = userIdInput => {\n      if (Object.getOwnPropertyNames(this.state.pickedAlgorithm).length !== 0 && Object.getOwnPropertyNames(this.state.pickedDataSet).length !== 0) {\n        axios.get(`http://localhost:8000/results?alg=${this.state.pickedAlgorithm.short}&data=${this.state.pickedDataSet.name}&user_id=${userIdInput}`).then(res => {\n          // console.log(res)\n          this.setState({\n            recommendations: res.data\n          });\n        }).catch(error => {\n          if (error.response.data.message === \"NO_MODEL\") {\n            this.setState({\n              errorMessage: \"There is no model for selected elements!\"\n            });\n          } else if (error.response.data.message === \"INVALID_ID\") {\n            this.setState({\n              errorMessage: \"User id not exists in selected data set!\"\n            });\n          } else {\n            console.log(error);\n            return;\n          }\n        });\n        axios.get(`http://localhost:8000/histories/?data=${this.state.pickedDataSet.name}&user_id=${userIdInput}`).then(res => {\n          // console.log(res)\n          this.setState({\n            userHistory: res.data\n          });\n        }).catch(err => console.log(err));\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      style: {\n        padding: '20px',\n        background: '#ECECEC'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: labelStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \" Algorithms \"), React.createElement(AlgorithmList, {\n      picked: this.state.pickedAlgorithm,\n      pickedAlgorithm: this.pickedAlgorithm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: labelStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \" Data sets \"), React.createElement(DataSetList, {\n      picked: this.state.pickedDataSet,\n      pickedDataSet: this.pickedDataSet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: labelStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \" User id \"), React.createElement(UserId, {\n      pickedDataSet: this.state.pickedDataSet,\n      pickedAlgorithm: this.state.pickedAlgorithm,\n      userIdSubmit: this.userIdSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), this.state.errorMessage ? React.createElement(AlertLabel, {\n      message: this.state.errorMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      style: {\n        padding: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Row, {\n      gutter: [24, 16],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: {\n        span: 24\n      },\n      lg: {\n        span: 12\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: labelStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \" Recommendations list \"), React.createElement(PathsList, {\n      elements: this.state.recommendations,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(Col, {\n      xs: {\n        span: 24\n      },\n      lg: {\n        span: 12\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: labelStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \" User history \"), React.createElement(PathsList, {\n      elements: this.state.userHistory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/kklimczu/STUDIA/inz_app/Recommender/frontend/recommender/src/App.js"],"names":["React","Row","Col","AlgorithmList","DataSetList","UserId","PathsList","AlertLabel","axios","labelStyle","padding","fontSize","fontWeight","textAlign","background","App","Component","state","pickedAlgorithm","pickedDataSet","pickedUserId","recommendations","userHistory","errorMessahe","algorithm","setState","errorMessage","dataSet","userIdSubmit","userIdInput","Object","getOwnPropertyNames","length","get","short","name","then","res","data","catch","error","response","message","console","log","err","render","span"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Row, Col } from 'antd';\n\nimport AlgorithmList from './components/AlgorithmList';\nimport DataSetList from './components/DataSetList';\nimport UserId from './components/UserId';\nimport PathsList from './components/PathsList';\nimport AlertLabel from './components/AlertLabel';\nimport axios from 'axios';\n\nconst labelStyle = {\n  padding: '10px', \n  fontSize: '150%', \n  fontWeight: 'bold', \n  textAlign: 'center', \n  background: '#bee9e6'\n};\n\nclass App extends React.Component {\n  state = {\n    pickedAlgorithm: {},\n    pickedDataSet: {},\n    pickedUserId: '',\n    recommendations: [],\n    userHistory: [],\n    errorMessahe: ''\n  }\n\n  pickedAlgorithm = (algorithm) => {\n    // console.log(algorithm)\n    this.setState({\n      pickedAlgorithm: algorithm,\n      errorMessage: ''\n    })\n  }\n\n  pickedDataSet = (dataSet) => {\n    // console.log(dataSet)\n    this.setState({\n      pickedDataSet: dataSet,\n      errorMessage: ''\n    })\n  }\n\n  userIdSubmit = (userIdInput) => {\n    if(Object.getOwnPropertyNames(this.state.pickedAlgorithm).length !== 0 && \n    Object.getOwnPropertyNames(this.state.pickedDataSet).length !== 0) {\n\n      axios.get(`http://localhost:8000/results?alg=${this.state.pickedAlgorithm.short}&data=${this.state.pickedDataSet.name}&user_id=${userIdInput}`)\n        .then(res => {\n            // console.log(res)\n            this.setState({\n              recommendations: res.data\n            });\n        })\n        .catch(error => {\n          if (error.response.data.message === \"NO_MODEL\") {\n            this.setState({\n              errorMessage: \"There is no model for selected elements!\"\n            });\n          }\n          else if (error.response.data.message === \"INVALID_ID\") {\n            this.setState({\n              errorMessage: \"User id not exists in selected data set!\"\n            });\n          }\n          else {\n            console.log(error);\n            return;\n          }\n        });\n\n      axios.get(`http://localhost:8000/histories/?data=${this.state.pickedDataSet.name}&user_id=${userIdInput}`)\n        .then(res => {\n            // console.log(res)\n            this.setState({\n              userHistory: res.data\n            });\n        })\n        .catch(err => console.log(err));\n    }\n  }\n\n  render() {\n      return (\n          <div className=\"App\" style={{padding: '20px', background: '#ECECEC'}}>\n\n              <div style={labelStyle}> Algorithms </div>\n              <AlgorithmList picked={this.state.pickedAlgorithm} pickedAlgorithm={this.pickedAlgorithm}/>\n              \n              <div style={labelStyle}> Data sets </div>\n              <DataSetList picked={this.state.pickedDataSet} pickedDataSet={this.pickedDataSet}/>\n          \n              <div style={labelStyle}> User id </div>\n              <UserId pickedDataSet={this.state.pickedDataSet} pickedAlgorithm={this.state.pickedAlgorithm} userIdSubmit={this.userIdSubmit} />\n\n              {this.state.errorMessage ? <AlertLabel message={this.state.errorMessage}/> : null}\n\n              <div style={{padding: '20px'}}>\n                <Row gutter={[24, 16]}>\n                  <Col xs={{ span: 24 }} lg={{ span: 12 }}>\n                    <div style={labelStyle}> Recommendations list </div>\n                    <PathsList elements={this.state.recommendations}/>\n                  </Col>\n                  <Col xs={{ span: 24 }} lg={{ span: 12 }}>\n                    <div style={labelStyle}> User history </div>\n                    <PathsList elements={this.state.userHistory}/>\n                  </Col>\n                </Row>\n              </div>\n          </div>\n      );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}